@mixin transition($params) {
  -webkit-transition: $params;
  -moz-transition: $params;
  -khtml-transition: $params;
  -o-transition: $params;
  transition: $params;
}

@mixin scale($params) {
  -webkit-transform: scale($params);
  -moz-transform: scale($params);
  -khtml-transform: scale($params);
  -o-transform: scale($params);
  transform: scale($params);
}

@mixin box-shadow($params) {
  -webkit-box-shadow: $params;
  -moz-box-shadow: $params;
  -khtml-box-shadow: $params;
  -o-box-shadow: $params;
  box-shadow: $params;
}

@mixin rotate($params) {
  -webkit-transform: rotate($params);
  -moz-transform: rotate($params);
  -khtml-transform: rotate($params);
  -o-transform: rotate($params);
  transform: rotate($params);
}

@mixin opacity($opacity) {
  -webkit-opacity: $opacity;
  -moz-opacity: $opacity;
  -khtml-opacity: $opacity;
  -o-opacity: $opacity;
  opacity: $opacity;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -khtml-border-radius: $radius;
  -o-border-radius: $radius;
  border-radius: $radius;
}

///////////////////////////
// CLAMP
///////////////////////////
// * This mixin generates fallbacks for browsers that do not support clamp,
// * the scaler to rem is used to ensure users can increase font size in browser by converting vw to rem

@mixin clamp($property, $min-size, $scaler, $scalerToRem, $max-size) {
  #{$property}: $max-size;
  #{$property}: #{"min(max(#{$min-size}, #{$scaler} + #{$scalerToRem}, #{$max-size}))"};
  #{$property}: clamp($min-size, $scaler + $scalerToRem, $max-size);
}


@mixin linkHoverAnimation($color1, $color2, $top, $lineWeight) {
  color: $color1;
  position: relative;
  text-align: center;
  &:hover {
    &::before {
      transform-origin: left;
      transform: scaleX(1);
    }
  }
  &::before {
    content: "";
    position: absolute;
    width: 100%;
    height: $lineWeight;
    border-radius: 4px;
    background-color: $color2;
    opacity: 0.7;
    bottom: 0;
    top: $top;
    left: 0;
    transform-origin: right;
    transform: scaleX(0);
    transition: transform 0.15s ease-in-out;
  }
}

@mixin roundedBtn($color1, $color2) {
  background-color: $color1;
  border-radius: 8px;
  border-style: none;
  box-sizing: border-box;
  color: #fff !important;
  display: inline-block;
  font-family: "Haas Grot Text R Web", "Helvetica Neue", Helvetica, Arial,
    sans-serif;
  font-size: 1.4rem;
  font-weight: 500;
  height: 40px;
  line-height: 20px;
  list-style: none;
  margin: 0;
  outline: none;
  padding: 5px 8px;
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: color 100ms;
  vertical-align: baseline;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  transition: all 0.2s ease;

  &:hover,
  &:focus {
    background-color: $color2;
  }
}

@mixin roundedBtnTransparent($color1, $color2) {
  background-color: transparent;
  border: solid 1px $color1;
  transition: all 0.3s ease;
  &:hover,
  &:focus {
    background-color: $color2;
    border: transparent;
  }
}

// ANIMIATIONS
@mixin base-animation() {
  transition: all 0.2s ease-out;
}

// SECTION SETUP
@mixin base-section-setup() {
  padding-top: 10vw;
  display: flex;
  flex-direction: column-reverse;
}

// HR BASE STYLE
@mixin base-hr-style($color, $size) {
  width: 60%;
  margin: 1rem auto;
  border: solid $size $color;
}

// TYPOGRAPHY
@mixin titleFontSize($size) {
  @if $size == half {
    @include clamp("font-size", 3rem, 2.5vw, 1rem, 20rem);
    // font-size: clamp(3rem, 2.5vw + 1rem, 20rem);
  }
  @if $size == full {
    @include clamp("font-size", 3rem, 3vw, 1rem, 20rem);

    // font-size: clamp(3rem, 3vw + 1rem, 20rem);
  }
  @if $size == desktop {
  }
  @if $size == desktopXL {
  }
}

@mixin footerTitleFontSize($size) {
  @if $size == phone {
    @include clamp("font-size", 3rem, 1.5vw, 1rem, 6rem);

    // font-size: clamp(3rem, 1.5vw + 1rem, 6rem);
  }
  @if $size == tablet {
    @include clamp("font-size", 3rem, 2vw, 1rem, 10rem);

    // font-size: clamp(3rem, 2vw + 1rem, 10rem);
  }
  @if $size == desktop {
  }
  @if $size == desktopXL {
  }
}

@mixin cardTitleFontSize($size) {
  @if $size == phone {
    @include clamp("font-size", 2.25rem, 1.5vw, 1rem, 12rem);

    // font-size: clamp(2.25rem, 1.5vw + 1rem, 12rem);
  }
  @if $size == tablet {
    @include clamp("font-size", 2.25rem, 2vw, 1rem, 12rem);

    // font-size: clamp(2.25rem, 2vw + 1rem, 12rem);
  }
  @if $size == desktop {
  }
  @if $size == desktopXL {
  }
}

@mixin cardParagraphFontSize($size) {
  @if $size == phone {
    @include clamp("font-size", 1rem, .5vw, 1rem, 8rem);

    // font-size: clamp(1rem, 0.5vw + 1rem, 8rem);
  }
  @if $size == tablet {
    @include clamp("font-size", 1rem, 1vw, 1rem, 8rem);

    // font-size: clamp(1rem, 1vw + 1rem, 8rem);
  }
  @if $size == desktop {
  }
  @if $size == desktopXL {
  }
}

@mixin paragraphFontSize($size) {
  @if $size == phone {
    @include clamp("font-size", 1rem, .5vw, 1rem, 8rem);

    // font-size: clamp(1rem, 0.5vw + 1rem, 8rem);
  }
  @if $size == tablet {
    @include clamp("font-size", 1rem, .75vw, 1rem, 8rem);

    // font-size: clamp(1rem, 0.75vw + 1rem, 8rem);
  }
  @if $size == desktop {
  }
  @if $size == desktopXL {
  }
}

@mixin navLinkFontSize() {
    @include clamp("font-size", 2rem, 1vw, .1rem, 4rem);

  // font-size: clamp(2rem, 1vw + 0.1rem, 4rem);
}

@mixin staffCardName() {
    @include clamp("font-size", 1rem, .75vw, 1rem, 5rem);

  // font-size: clamp(1rem, 0.75vw + 1rem, 5rem);
}

@mixin staffCardTitle() {
    @include clamp("font-size", 1rem, .5vw, 1rem, 4rem);

  // font-size: clamp(1rem, 0.5vw + 1rem, 4rem);
}

@mixin copyrightFontSize() {
    @include clamp("font-size", 1rem, .75vw, .1rem, 4rem);

  // font-size: clamp(1rem, 0.75vw, 4rem);
}

@mixin absoluteCenter() {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

